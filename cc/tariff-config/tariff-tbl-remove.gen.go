// THIS FILE IS AUTO-GENERATED BY ZWGEN
// DO NOT MODIFY

package tariffconfig

import (
	"encoding/gob"
	"errors"

	"github.com/gozwave/gozw/cc"
)

const CommandTariffTblRemove cc.CommandID = 0x03

func init() {
	gob.Register(TariffTblRemove{})
	cc.Register(cc.CommandIdentifier{
		CommandClass: cc.CommandClassID(0x4A),
		Command:      cc.CommandID(0x03),
		Version:      1,
	}, NewTariffTblRemove)
}

func NewTariffTblRemove() cc.Command {
	return &TariffTblRemove{}
}

// <no value>
type TariffTblRemove struct {
	Properties1 struct {
		RateParameterSetIds byte
	}

	RateParameterSetId []byte
}

func (cmd TariffTblRemove) CommandClassID() cc.CommandClassID {
	return 0x4A
}

func (cmd TariffTblRemove) CommandID() cc.CommandID {
	return CommandTariffTblRemove
}

func (cmd TariffTblRemove) CommandIDString() string {
	return "TARIFF_TBL_REMOVE"
}

func (cmd *TariffTblRemove) UnmarshalBinary(data []byte) error {
	// According to the docs, we must copy data if we wish to retain it after returning

	payload := make([]byte, len(data))
	copy(payload, data)

	if len(payload) < 2 {
		return errors.New("Payload length underflow")
	}

	i := 2

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties1.RateParameterSetIds = (payload[i] & 0x3F)

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	{
		length := (payload[0+2]) & 0x3F
		cmd.RateParameterSetId = payload[i : i+int(length)]
		i += int(length)
	}

	return nil
}

func (cmd *TariffTblRemove) MarshalBinary() (payload []byte, err error) {
	payload = make([]byte, 2)
	payload[0] = byte(cmd.CommandClassID())
	payload[1] = byte(cmd.CommandID())

	{
		var val byte

		val |= (cmd.Properties1.RateParameterSetIds) & byte(0x3F)

		payload = append(payload, val)
	}

	if cmd.RateParameterSetId != nil && len(cmd.RateParameterSetId) > 0 {
		payload = append(payload, cmd.RateParameterSetId...)
	}

	return
}

func Noop() {
	// does nothing, just here to allow
	// consumers to invoke the init function
}
