// THIS FILE IS AUTO-GENERATED BY ZWGEN
// DO NOT MODIFY

package chimneyfan

import (
	"encoding/gob"

	"github.com/gozwave/gozw/cc"
)

const CommandAlarmLogGet cc.CommandID = 0x20

func init() {
	gob.Register(AlarmLogGet{})
	cc.Register(cc.CommandIdentifier{
		CommandClass: cc.CommandClassID(0x2A),
		Command:      cc.CommandID(0x20),
		Version:      1,
	}, NewAlarmLogGet)
}

func NewAlarmLogGet() cc.Command {
	return &AlarmLogGet{}
}

// <no value>
type AlarmLogGet struct {
}

func (cmd AlarmLogGet) CommandClassID() cc.CommandClassID {
	return 0x2A
}

func (cmd AlarmLogGet) CommandID() cc.CommandID {
	return CommandAlarmLogGet
}

func (cmd AlarmLogGet) CommandIDString() string {
	return "CHIMNEY_FAN_ALARM_LOG_GET"
}

func (cmd *AlarmLogGet) UnmarshalBinary(data []byte) error {
	// According to the docs, we must copy data if we wish to retain it after returning

	return nil
}

func (cmd *AlarmLogGet) MarshalBinary() (payload []byte, err error) {
	payload = make([]byte, 2)
	payload[0] = byte(cmd.CommandClassID())
	payload[1] = byte(cmd.CommandID())

	return
}

func Noop() {
	// does nothing, just here to allow
	// consumers to invoke the init function
}
