// THIS FILE IS AUTO-GENERATED BY ZWGEN
// DO NOT MODIFY

package protectionv2

import (
	"encoding/gob"

	"github.com/gozwave/gozw/cc"
)

const CommandTimeoutGet cc.CommandID = 0x0A

func init() {
	gob.Register(TimeoutGet{})
	cc.Register(cc.CommandIdentifier{
		CommandClass: cc.CommandClassID(0x75),
		Command:      cc.CommandID(0x0A),
		Version:      2,
	}, NewTimeoutGet)
}

func NewTimeoutGet() cc.Command {
	return &TimeoutGet{}
}

// <no value>
type TimeoutGet struct {
}

func (cmd TimeoutGet) CommandClassID() cc.CommandClassID {
	return 0x75
}

func (cmd TimeoutGet) CommandID() cc.CommandID {
	return CommandTimeoutGet
}

func (cmd TimeoutGet) CommandIDString() string {
	return "PROTECTION_TIMEOUT_GET"
}

func (cmd *TimeoutGet) UnmarshalBinary(data []byte) error {
	// According to the docs, we must copy data if we wish to retain it after returning

	return nil
}

func (cmd *TimeoutGet) MarshalBinary() (payload []byte, err error) {
	payload = make([]byte, 2)
	payload[0] = byte(cmd.CommandClassID())
	payload[1] = byte(cmd.CommandID())

	return
}
