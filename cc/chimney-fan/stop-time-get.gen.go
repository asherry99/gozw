// THIS FILE IS AUTO-GENERATED BY ZWGEN
// DO NOT MODIFY

package chimneyfan

import (
	"encoding/gob"

	"github.com/gozwave/gozw/cc"
)

const CommandStopTimeGet cc.CommandID = 0x14

func init() {
	gob.Register(StopTimeGet{})
	cc.Register(cc.CommandIdentifier{
		CommandClass: cc.CommandClassID(0x2A),
		Command:      cc.CommandID(0x14),
		Version:      1,
	}, NewStopTimeGet)
}

func NewStopTimeGet() cc.Command {
	return &StopTimeGet{}
}

// <no value>
type StopTimeGet struct {
}

func (cmd StopTimeGet) CommandClassID() cc.CommandClassID {
	return 0x2A
}

func (cmd StopTimeGet) CommandID() cc.CommandID {
	return CommandStopTimeGet
}

func (cmd StopTimeGet) CommandIDString() string {
	return "CHIMNEY_FAN_STOP_TIME_GET"
}

func (cmd *StopTimeGet) UnmarshalBinary(data []byte) error {
	// According to the docs, we must copy data if we wish to retain it after returning

	return nil
}

func (cmd *StopTimeGet) MarshalBinary() (payload []byte, err error) {
	payload = make([]byte, 2)
	payload[0] = byte(cmd.CommandClassID())
	payload[1] = byte(cmd.CommandID())

	return
}
