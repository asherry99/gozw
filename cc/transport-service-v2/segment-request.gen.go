// THIS FILE IS AUTO-GENERATED BY ZWGEN
// DO NOT MODIFY

package transportservicev2

import (
	"encoding/gob"
	"errors"

	"github.com/gozwave/gozw/cc"
)

const CommandSegmentRequest cc.CommandID = 0xC8

func init() {
	gob.Register(SegmentRequest{})
	cc.Register(cc.CommandIdentifier{
		CommandClass: cc.CommandClassID(0x55),
		Command:      cc.CommandID(0xC8),
		Version:      2,
	}, NewSegmentRequest)
}

func NewSegmentRequest() cc.Command {
	return &SegmentRequest{}
}

// <no value>
type SegmentRequest struct {
	Properties1 struct {
	}

	Properties2 struct {
		DatagramOffset1 byte

		SessionId byte
	}

	DatagramOffset2 byte
}

func (cmd SegmentRequest) CommandClassID() cc.CommandClassID {
	return 0x55
}

func (cmd SegmentRequest) CommandID() cc.CommandID {
	return CommandSegmentRequest
}

func (cmd SegmentRequest) CommandIDString() string {
	return "COMMAND_SEGMENT_REQUEST"
}

func (cmd *SegmentRequest) UnmarshalBinary(data []byte) error {
	// According to the docs, we must copy data if we wish to retain it after returning

	payload := make([]byte, len(data))
	copy(payload, data)

	if len(payload) < 2 {
		return errors.New("Payload length underflow")
	}

	i := 2

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties2.DatagramOffset1 = (payload[i] & 0x07)

	cmd.Properties2.SessionId = (payload[i] & 0xF0) >> 4

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.DatagramOffset2 = payload[i]
	i++

	return nil
}

func (cmd *SegmentRequest) MarshalBinary() (payload []byte, err error) {
	payload = make([]byte, 2)
	payload[0] = byte(cmd.CommandClassID())
	payload[1] = byte(cmd.CommandID())

	{
		var val byte

		payload = append(payload, val)
	}

	{
		var val byte

		val |= (cmd.Properties2.DatagramOffset1) & byte(0x07)

		val |= (cmd.Properties2.SessionId << byte(4)) & byte(0xF0)

		payload = append(payload, val)
	}

	payload = append(payload, cmd.DatagramOffset2)

	return
}
