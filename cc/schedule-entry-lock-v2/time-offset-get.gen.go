// THIS FILE IS AUTO-GENERATED BY ZWGEN
// DO NOT MODIFY

package scheduleentrylockv2

import (
	"encoding/gob"

	"github.com/gozwave/gozw/cc"
)

const CommandTimeOffsetGet cc.CommandID = 0x0B

func init() {
	gob.Register(TimeOffsetGet{})
	cc.Register(cc.CommandIdentifier{
		CommandClass: cc.CommandClassID(0x4E),
		Command:      cc.CommandID(0x0B),
		Version:      2,
	}, NewTimeOffsetGet)
}

func NewTimeOffsetGet() cc.Command {
	return &TimeOffsetGet{}
}

// <no value>
type TimeOffsetGet struct {
}

func (cmd TimeOffsetGet) CommandClassID() cc.CommandClassID {
	return 0x4E
}

func (cmd TimeOffsetGet) CommandID() cc.CommandID {
	return CommandTimeOffsetGet
}

func (cmd TimeOffsetGet) CommandIDString() string {
	return "SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET"
}

func (cmd *TimeOffsetGet) UnmarshalBinary(data []byte) error {
	// According to the docs, we must copy data if we wish to retain it after returning

	return nil
}

func (cmd *TimeOffsetGet) MarshalBinary() (payload []byte, err error) {
	payload = make([]byte, 2)
	payload[0] = byte(cmd.CommandClassID())
	payload[1] = byte(cmd.CommandID())

	return
}
